{"level":"info","message":"Cannot read properties of undefined (reading 'id')","service":"user-service"}
{"level":"info","message":"Cannot read properties of undefined (reading 'id')","service":"user-service"}
{"level":"info","message":"Login failed: jwt expired","service":"user-service"}
{"level":"info","message":"\nInvalid `prisma.quiz_sessions.findUnique()` invocation in\n/Users/thibauxswildens/Documents/Projects/Freestyle-friday/music-quiz/apps/backend/src/MusicQuiz/Sessions/QuizSessions/QuizSessionService.ts:30:52\n\n  27 },\n  28 \n  29 findSession: async (session_id: number) => {\n→ 30     const session = await prisma.quiz_sessions.findUnique({\n           where: {\n         +   id: Int\n           }\n         })\n\nArgument `id` is missing.","service":"user-service"}
{"level":"info","message":"\nInvalid `prisma.quiz_sessions.findFirst()` invocation in\n/Users/thibauxswildens/Documents/Projects/Freestyle-friday/music-quiz/apps/backend/src/MusicQuiz/Sessions/QuizSessions/QuizSessionService.ts:30:52\n\n  27 },\n  28 \n  29 findSession: async (session_id: number) => {\n→ 30     const session = await prisma.quiz_sessions.findFirst({\n           where: {\n         +   id: {\n         +     equals: Int | IntFieldRefInput,\n         +     in: Int[] | ListIntFieldRefInput,\n         +     notIn: Int[] | ListIntFieldRefInput,\n         +     lt: Int | IntFieldRefInput,\n         +     lte: Int | IntFieldRefInput,\n         +     gt: Int | IntFieldRefInput,\n         +     gte: Int | IntFieldRefInput,\n         +     not: Int | NestedIntFilter\n         +   }\n           }\n         })\n\nArgument `id` is missing.","service":"user-service"}
{"level":"info","message":"\nInvalid `prisma.quiz_sessions.findUnique()` invocation in\n/Users/thibauxswildens/Documents/Projects/Freestyle-friday/music-quiz/apps/backend/src/MusicQuiz/Sessions/QuizSessions/QuizSessionService.ts:30:52\n\n  27 },\n  28 \n  29 findSession: async (session_id: number) => {\n→ 30     const session = await prisma.quiz_sessions.findUnique({\n           where: {\n         +   id: Int\n           }\n         })\n\nArgument `id` is missing.","service":"user-service"}
{"level":"info","message":"\nInvalid `prisma.quiz_sessions.findUnique()` invocation in\n/Users/thibauxswildens/Documents/Projects/Freestyle-friday/music-quiz/apps/backend/src/MusicQuiz/Sessions/QuizSessions/QuizSessionService.ts:30:52\n\n  27 },\n  28 \n  29 findSession: async (session_id: number) => {\n→ 30     const session = await prisma.quiz_sessions.findUnique({\n           where: {\n         +   id: Int\n           }\n         })\n\nArgument `id` is missing.","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session with id: 1 not found","service":"user-service"}
{"level":"info","message":"MusicQuiz session for user: Thibaux Swildens not found","service":"user-service"}
